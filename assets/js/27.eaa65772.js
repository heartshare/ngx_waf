(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{405:function(t,n,a){"use strict";a.r(n);var s=a(41),e=Object(s.a)({},(function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"常见问题与解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见问题与解答"}},[t._v("#")]),t._v(" 常见问题与解答")]),t._v(" "),a("h2",{attrs:{id:"本模块的性能如何"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本模块的性能如何"}},[t._v("#")]),t._v(" 本模块的性能如何？")]),t._v(" "),a("p",[t._v("IP 检查和 CC 防御花费常数时间，其它的检查花费 O(nm) 的时间，其中 n 是相关规则的条数，m 为执行正则匹配的时间复杂度。")]),t._v(" "),a("h2",{attrs:{id:"post检测失效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#post检测失效"}},[t._v("#")]),t._v(" post检测失效")]),t._v(" "),a("p",[t._v("本模块出于性能考虑只会在 Post 请求体在内存中时检查，若不在内存中则跳过检查。\n您可以通过修改配置文件来解决这个问题。")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置 Post 请求体缓冲区大小")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_body_buffer_size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("M"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 永远将请求体存放在内存中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("client_body_in_file_only")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_buffer_size",target:"_blank",rel:"noopener noreferrer"}},[t._v("client_body_buffer_size 的说明"),a("OutboundLink")],1),t._v("\n和 "),a("a",{attrs:{href:"https://nginx.org/en/docs/http/ngx_http_core_module.html#client_body_in_file_only",target:"_blank",rel:"noopener noreferrer"}},[t._v("client_body_in_file_only 的说明"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"fork-failed-while-spawning-worker-process-12-cannot-allocate-memory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fork-failed-while-spawning-worker-process-12-cannot-allocate-memory"}},[t._v("#")]),t._v(' fork() failed while spawning "worker process" (12: Cannot allocate memory)')]),t._v(" "),a("p",[t._v("可能是过多地使用 "),a("code",[t._v("nginx -s reload")]),t._v(" 导致的，本模块会在读取配置的时候申请一些内存，但是不知为何 "),a("code",[t._v("nginx -s reload")]),t._v(" 之后这些内存不会立即释放，所以短时间内频繁 "),a("code",[t._v("nginx -s reload")]),t._v(" 就极可能导致这个错误。")])])}),[],!1,null,null,null);n.default=e.exports}}]);