(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{385:function(e,t,a){"use strict";a.r(t);var o=a(41),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[e._v("#")]),e._v(" Log")]),e._v(" "),a("h2",{attrs:{id:"blocking-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blocking-log"}},[e._v("#")]),e._v(" Blocking Log")]),e._v(" "),a("p",[e._v("The blocking log is stored in "),a("code",[e._v("error.log")]),e._v(". The log level of the blocking log is "),a("code",[e._v("ALERT")]),e._v(".\nThe format is "),a("code",[e._v("ngx_waf: [rule type][specific rule triggered]")]),e._v(".")]),e._v(" "),a("p",[e._v("You can use the following command to quickly view the blocking log.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /path/to/error.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" ngx_waf\n")])])]),a("p",[e._v("Here are two examples.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2020/01/20 22:56:30 [alert] 6666#0: *30 ngx_waf: [BLACK-URL][(?i)(?:/\\.env$)], client: 192.168.1.1, server: example.com, request: "GET /v1/.env HTTP/1.1", host: "example.com", referrer: "http:/example.com/v1/.env"\n\n2020/01/20 22:58:40 [alert] 6667#0: *11 ngx_waf: [BLACK-POST][(?i)(?:select.+(?:from|limit))], client: 192.168.1.1, server: example.com, request: "POST /xmlrpc.php HTTP/1.1", host: "example.com", referrer: "https://example.com/"\n')])])]),a("h2",{attrs:{id:"debugging-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugging-log"}},[e._v("#")]),e._v(" Debugging Log")]),e._v(" "),a("p",[e._v("When you adjust the error log level to "),a("code",[e._v("debug")]),e._v(" in the nginx configuration file,\nthe debug log will be output in "),a("code",[e._v("error.log")]),e._v(" for troubleshooting purposes.\nfor troubleshooting purposes. The format is "),a("code",[e._v("ngx_waf_debug: debug information")]),e._v(".")]),e._v(" "),a("p",[e._v("You can use the following command to quickly view the debug log.")]),e._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" /path/to/error.log "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" ngx_waf_debug\n")])])]),a("p",[e._v("Below is a typical modulation log that illustrates the flow of a CC defense detection.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Start the CC inspection process.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The module context has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The configuration of the module has been obtained.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection has begun.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is locked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Shared memory is unlocked.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: Detection is over.\n2021/02/21 20:35:33 [debug] 6666#0: *1 ngx_waf_debug: The CC detection process is fully completed.\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);